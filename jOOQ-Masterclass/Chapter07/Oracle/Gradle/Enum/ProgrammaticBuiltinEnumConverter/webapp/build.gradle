plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '2.5.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.flywaydb.flyway' version '7.7.3'    
    id 'nu.studer.jooq' version '6.0.1'
}

group = 'com.classicmodels'
version = '1.0'
sourceCompatibility = '17'
targetCompatibility = '17'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {    
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'    
    implementation 'org.springframework.boot:spring-boot-starter-web'    
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.jooq.trial-java-8:jooq'
    implementation project(':jooq-code-generator')
}

application {
    mainClass = 'com.classicmodels.MainApplication'
}

processResources {
    filesMatching("**/application.properties") {
        expand( project.properties )
    }
}

jooq {
    version = project.properties['jooq']
    edition = nu.studer.gradle.jooq.JooqEdition.TRIAL_JAVA_8
}


flyway {
    driver = project.properties['driverClassName']
    url = project.properties['url']
    user = project.properties['username']
    password = project.properties['password']   
    locations = ['filesystem:./../../../../../../db/migration/dev/oracle']
    baselineOnMigrate=true
}

task runProgrammaticGenerator(type: JavaExec) {    

    dependsOn tasks.named('flywayMigrate')
    dependsOn(':jooq-code-generator:compileJava')

    configurations {
      codegen
      oracleojdbc
      oracleucp
      jakarta
    }

    dependencies {
       codegen "org.jooq.trial-java-8:jooq-codegen"
       oracleojdbc "com.oracle.database.jdbc:ojdbc8"
       oracleucp "com.oracle.database.jdbc:ucp"
       jakarta "jakarta.xml.bind:jakarta.xml.bind-api:3.0.1"
    }

    classpath = files([
         "${rootDir}/jooq-code-generator/build/classes/java/main",
         configurations.codegen, configurations.oracleojdbc, configurations.oracleucp, configurations.jakarta
    ])
	
    mainClass = 'com.classicmodels.jooq.config.JooqConfig'	
}

sourceSets.main.java.srcDirs = ['build/generated-sources/jooq', 'src/main/java']

assemble.dependsOn('runProgrammaticGenerator')
compileJava.dependsOn('runProgrammaticGenerator')