<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.classicmodels</groupId>
    <artifactId>DeclarativeXMLDatabase</artifactId>
    <version>1.0</version>    

    <name>DeclarativeXMLDatabase</name>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.7</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
        
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        
        <java.version>17</java.version>    
        <kotlin.version>1.6.0</kotlin.version>           
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        
        <jooq.version>3.16.4</jooq.version>     
        <codehaus.mojo.version>1.0.0</codehaus.mojo.version>    
        <jakarta.validation>3.0.1</jakarta.validation>
                
        <main.class>com.classicmodels.MainApplicationKt</main.class>
    </properties>

    <dependencies>        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>        
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>    
        </dependency>
        <dependency>
            <groupId>org.jooq.trial-java-8</groupId>
            <artifactId>jooq</artifactId>         
            <version>${jooq.version}</version>
        </dependency>                    
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.oracle.database.jdbc</groupId>
            <artifactId>ojdbc8</artifactId>            
        </dependency>
        <dependency>
            <groupId>com.oracle.database.jdbc</groupId>
            <artifactId>ucp</artifactId>            
        </dependency>               
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <version>${jakarta.validation}</version>
        </dependency>       
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <build>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <configuration>
                    <args>
                        <arg>-Xjsr305=strict</arg>
                    </args>
                    <compilerPlugins>
                        <plugin>spring</plugin>
                    </compilerPlugins>
                </configuration>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>                    
                                <sourceDir>${project.basedir}/target/generated-sources/jooq/generated</sourceDir>                                                   
                                <!-- <sourceDir>${project.basedir}/src/main/java</sourceDir> -->
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <skip>true</skip>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>                 
                                <!-- <sourceDir>${project.basedir}/src/test/java</sourceDir> -->
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>    
                <configuration>
                    <compilerArgs>
                        <arg>--enable-preview</arg>                        
                    </compilerArgs>
                </configuration>
                <executions>
                    <!-- Replacing default-compile as it is treated specially by maven -->
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                    <!-- Replacing default-testCompile as it is treated specially by maven -->
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>java-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>java-test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <skip>${maven.test.skip}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>                
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>${main.class}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>   
            <plugin>
                <groupId>org.jooq.trial-java-8</groupId>
                <artifactId>jooq-codegen-maven</artifactId>  
                <version>${jooq.version}</version>                                     
                <executions>
                    <execution>
                        <id>generate-for-oracle</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>                                  
                        <configuration xmlns="http://www.jooq.org/xsd/jooq-codegen-3.16.0.xsd">
                            <generator>
                                
                                <!-- The default code generator. 
                                     You can override this one, to generate your own code style.
                                     
                                Supported generators:                                
                                - org.jooq.codegen.JavaGenerator
                                - org.jooq.codegen.ScalaGenerator
                                - org.jooq.codegen.KotlinGenerator
                                
                                Defaults to org.jooq.codegen.JavaGenerator -->
                                <name>org.jooq.codegen.KotlinGenerator</name>                                

                                <database>
                                    <!-- Rely on jOOQ XML Database API -->
                                    <name>org.jooq.meta.xml.XMLDatabase</name>
                                                                                                                                                
                                    <properties>                                                    
                                        <!-- Use any of the SQLDialect values here -->
                                        <property>
                                            <key>dialect</key>
                                            <value>ORACLE</value>
                                        </property>
            
                                        <!-- Specify the location of your database file -->
                                        <property>
                                            <key>xmlFile</key>
                                            <value>./../../../../../db/migration/xml/oracle/sql.xml</value>
                                        </property>
                                    </properties>                                                
                                                 
                                    <!-- All elements that are generated from your schema
                                    (A Java regular expression. Use the pipe to separate several expressions)
                                    Watch out for case-sensitivity. Depending on your database, this might be important! 
                                    You can create case-insensitive regular expressions using this syntax: (?i:expr).
                                    Whitespace is ignored and comments are possible. -->       
                                    <includes>.*</includes>                                                                                                                                                                                                           
                                    
                                    <!-- Schema version provider -->            
                                    <schemaVersionProvider>${schema.version}</schemaVersionProvider>                                    
                                </database>
                                
                                <!-- Rename the generated POJOs and DAOs classes -->                      
                                <strategy>
                                    <matchers>
                                        <tables>
                                            <table>
                                                <pojoClass>                                                         
                                                    <expression>JOOQ_$0</expression>
                                                    <transform>PASCAL</transform>                                                                                      
                                                </pojoClass>
                                                <daoClass>
                                                    <expression>$0_Repository</expression>
                                                    <transform>PASCAL</transform>                                                                                      
                                                </daoClass>
                                            </table>
                                        </tables>
                                    </matchers>
                                </strategy>
                                
                                <!-- jOOQ will generate POJOs and DAOs on our behalf -->
                                <generate>
                                    <daos>true</daos>                                   
                                    <validationAnnotations>true</validationAnnotations>                            
                                    <springAnnotations>true</springAnnotations>   
                                    <deprecationOnUnknownTypes>false</deprecationOnUnknownTypes>
                                    <pojosAsKotlinDataClasses>true</pojosAsKotlinDataClasses>                                                                       
                                </generate>
                                
                                <target>
                                    <!-- The destination package of your generated classes (within the destination directory).
                                    jOOQ may append the schema name to this package if generating multiple schemas,
                                    e.g. org.jooq.your.packagename.schema1
                                    org.jooq.your.packagename.schema2 -->
                                    <packageName>jooq.generated</packageName>
            
                                    <!-- The destination directory of your generated classes. Using Maven directory layout here. -->
                                    <directory>target/generated-sources</directory>
                                </target>
                            </generator>
                        </configuration>
                    </execution>
                </executions> 
            </plugin>
        </plugins>
    </build>
</project>
